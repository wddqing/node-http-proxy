#!/usr/bin/env node

'use strict';

var program = require('commander');
var os      = require('os');
var cp      = require('child_process');
var fs      = require('fs');

var common  = require('../lib/common');
var SERVER_ENV = common.SERVER_ENV;
var PID = SERVER_ENV.PID;
var VERSION = SERVER_ENV.VERSION;

program.on('--help',function(){
    console.log("  ================Basic Example===============");
    console.log('');
    console.log('  SERVER START');
    console.log('  $nproxy start -p 8888 -i 1');
    console.log('');
    console.log('  SERVER STOP');
    console.log('  $nproxy stop');
    console.log('');
    console.log('  view more detail at http://github.com/wddqing/node-http-proxy');
    console.log('');
});


//set version
program.version(VERSION);

//program command
program.command('start')
    .description('start server')
    .option('-i --instance <i>','child process,0 means use max cpu cores',function(i){
        //check instance size
        var cores = os.cpus().length;
        return i > cores? cores : i>0 ? i : 1
    })
    .option('-p --port <p>','listen port')
    .option('-D --debug','set debug level')
    .action(function(cmd){
        if(fs.existsSync(PID)){
            var pid = fs.readFileSync(PID);
            console.log('stop nproxy pid',Number(pid));
            try{
                process.kill(Number(fs.readFileSync(PID),'SIGTERM'));
                fs.unlinkSync(PID);
            }catch(e){
                console.log('server stop error',e)
            }
        }

        var cp_opt = {
            stdio: ['ignore', 'ignore', 'ignore'],
            env: process.env,
            cwd: process.cwd(),
            detached: true
        };
        try{
            var argv = ['-p',cmd.port || 8845,'-i',cmd.instance || os.cpus().length ,cmd.debug];
            var child = cp.spawn(process.execPath,[__dirname+'/main.js'].concat(argv),cp_opt);
            console.log('start process nproxy',child.pid,'pid file',PID);
            fs.writeFileSync(PID,child.pid);
            child.unref();
        }catch(e){
            console.log('server start error',e)
        }
        process.exit(0);
    });

program.command('stop')
    .description('stop server')
    .action(function(cmd){
        if(fs.existsSync(PID)){
            var pid = fs.readFileSync(PID);
            console.log('stop nproxy pid',Number(pid));
            try{
                process.kill(Number(fs.readFileSync(PID),'SIGTERM'));
                fs.unlinkSync(PID);
            }catch(e){
                console.log('server stop error',e)
            }
        }
        process.exit(0)
    });

program.command('*')
    .action(function(cmd){
        console.log('    use --help for command usage')
    });

//parse argv
program.parse(process.argv);









